import React, { useState } from 'react';
import { MapPin, Navigation, ZoomIn, ZoomOut, Layers } from 'lucide-react';
import { listings } from '../data/mockData';

export function MapView() {
  const [mapType, setMapType] = useState<'roadmap' | 'satellite'>('roadmap');
  const [zoom, setZoom] = useState(12);
  const [center] = useState({ lat: 37.7749, lng: -122.4194 });

  return (
    <div className="h-[calc(100vh-4rem)] relative">
      {/* Map Container */}
      <div className="w-full h-full bg-gray-200 dark:bg-gray-700 relative overflow-hidden rounded-lg">
        {/* Mock Map Background */}
        <div className="absolute inset-0">
          <svg
            className="w-full h-full"
            viewBox="0 0 800 600"
            style={{ background: mapType === 'satellite' ? '#2d3748' : '#f7fafc' }}
          >
            {/* Streets */}
            <line x1="0" y1="150" x2="800" y2="150" stroke={mapType === 'satellite' ? '#4a5568' : '#e2e8f0'} strokeWidth="2" />
            <line x1="0" y1="300" x2="800" y2="300" stroke={mapType === 'satellite' ? '#4a5568' : '#e2e8f0'} strokeWidth="2" />
            <line x1="0" y1="450" x2="800" y2="450" stroke={mapType === 'satellite' ? '#4a5568' : '#e2e8f0'} strokeWidth="2" />
            <line x1="200" y1="0" x2="200" y2="600" stroke={mapType === 'satellite' ? '#4a5568' : '#e2e8f0'} strokeWidth="2" />
            <line x1="400" y1="0" x2="400" y2="600" stroke={mapType === 'satellite' ? '#4a5568' : '#e2e8f0'} strokeWidth="2" />
            <line x1="600" y1="0" x2="600" y2="600" stroke={mapType === 'satellite' ? '#4a5568' : '#e2e8f0'} strokeWidth="2" />
            
            {/* Blocks */}
            <rect x="50" y="50" width="100" height="80" fill={mapType === 'satellite' ? '#1a202c' : '#edf2f7'} />
            <rect x="250" y="180" width="120" height="90" fill={mapType === 'satellite' ? '#1a202c' : '#edf2f7'} />
            <rect x="450" y="80" width="100" height="100" fill={mapType === 'satellite' ? '#1a202c' : '#edf2f7'} />
            <rect x="100" y="350" width="80" height="70" fill={mapType === 'satellite' ? '#1a202c' : '#edf2f7'} />
            
            {/* Park areas */}
            <circle cx="650" cy="200" r="60" fill={mapType === 'satellite' ? '#2d5016' : '#68d391'} />
            <rect x="320" y="400" width="150" height="120" rx="10" fill={mapType === 'satellite' ? '#2d5016' : '#68d391'} />
          </svg>
        </div>

        {/* Listing Markers */}
        {listings.map((listing, index) => (
          <div
            key={listing.id}
            className="absolute cursor-pointer transform -translate-x-1/2 -translate-y-full group"
            style={{
              left: `${25 + (index * 15)}%`,
              top: `${30 + (index * 10)}%`,
            }}
          >
            <div className="bg-blue-600 text-white px-2 py-1 rounded-lg text-xs font-semibold shadow-lg group-hover:bg-blue-700 transition-colors">
              ${listing.price.toLocaleString()}
            </div>
            <div className="w-3 h-3 bg-blue-600 transform rotate-45 mx-auto -mt-1"></div>
            
            {/* Hover Card */}
            <div className="absolute bottom-full mb-2 left-1/2 transform -translate-x-1/2 opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none">
              <div className="bg-white dark:bg-gray-800 p-3 rounded-lg shadow-xl border border-gray-200 dark:border-gray-700 w-48">
                <img
                  src={listing.images[0]}
                  alt={listing.title}
                  className="w-full h-24 object-cover rounded-md mb-2"
                />
                <h3 className="font-semibold text-sm text-gray-900 dark:text-white truncate">
                  {listing.title}
                </h3>
                <p className="text-xs text-gray-600 dark:text-gray-400 truncate">
                  {listing.description}
                </p>
                <div className="flex items-center justify-between mt-2">
                  <span className="text-sm font-bold text-green-600">
                    ${listing.price.toLocaleString()}
                  </span>
                  <span className="text-xs text-gray-500">
                    {listing.location.distance}mi away
                  </span>
                </div>
              </div>
            </div>
          </div>
        ))}

        {/* Current Location Marker */}
        <div
          className="absolute w-4 h-4 bg-blue-500 border-2 border-white rounded-full transform -translate-x-1/2 -translate-y-1/2 shadow-lg"
          style={{ left: '40%', top: '50%' }}
        >
          <div className="absolute inset-0 bg-blue-500 rounded-full animate-ping opacity-30"></div>
        </div>
      </div>

      {/* Map Controls */}
      <div className="absolute top-4 right-4 space-y-2">
        <button
          onClick={() => setMapType(mapType === 'roadmap' ? 'satellite' : 'roadmap')}
          className="bg-white dark:bg-gray-800 p-2 rounded-lg shadow-lg hover:shadow-xl transition-shadow border border-gray-200 dark:border-gray-600"
          title="Toggle map type"
        >
          <Layers size={20} className="text-gray-600 dark:text-gray-400" />
        </button>
        <button
          onClick={() => setZoom(Math.min(zoom + 1, 20))}
          className="bg-white dark:bg-gray-800 p-2 rounded-lg shadow-lg hover:shadow-xl transition-shadow border border-gray-200 dark:border-gray-600"
        >
          <ZoomIn size={20} className="text-gray-600 dark:text-gray-400" />
        </button>
        <button
          onClick={() => setZoom(Math.max(zoom - 1, 1))}
          className="bg-white dark:bg-gray-800 p-2 rounded-lg shadow-lg hover:shadow-xl transition-shadow border border-gray-200 dark:border-gray-600"
        >
          <ZoomOut size={20} className="text-gray-600 dark:text-gray-400" />
        </button>
        <button className="bg-white dark:bg-gray-800 p-2 rounded-lg shadow-lg hover:shadow-xl transition-shadow border border-gray-200 dark:border-gray-600">
          <Navigation size={20} className="text-gray-600 dark:text-gray-400" />
        </button>
      </div>

      {/* Location Info */}
      <div className="absolute bottom-4 left-4 bg-white dark:bg-gray-800 p-4 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700">
        <div className="flex items-center space-x-2 mb-2">
          <MapPin size={16} className="text-blue-600" />
          <span className="font-medium text-gray-900 dark:text-white">San Francisco, CA</span>
        </div>
        <p className="text-sm text-gray-600 dark:text-gray-400">
          {listings.length} items within {25} miles
        </p>
      </div>

      {/* Legend */}
      <div className="absolute top-4 left-4 bg-white dark:bg-gray-800 p-4 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700">
        <h3 className="font-semibold text-gray-900 dark:text-white mb-2">Map Legend</h3>
        <div className="space-y-1 text-sm">
          <div className="flex items-center space-x-2">
            <div className="w-3 h-3 bg-blue-500 border border-white rounded-full"></div>
            <span className="text-gray-600 dark:text-gray-400">Your location</span>
          </div>
          <div className="flex items-center space-x-2">
            <div className="bg-blue-600 text-white px-1 text-xs rounded">$$$</div>
            <span className="text-gray-600 dark:text-gray-400">Available items</span>
          </div>
        </div>
      </div>
    </div>
  );
}
