import React from 'react';
import { Home, Search, MapPin, MessageCircle, User, Plus, Grid, Car, Smartphone, Sofa, Shirt, Book, Dumbbell, Baby } from 'lucide-react';
import { categories } from '../data/mockData';

interface SidebarProps {
  isOpen: boolean;
  currentView: string;
  onViewChange: (view: string) => void;
  onCategoryChange: (category: string) => void;
}

const iconMap: Record<string, React.ComponentType<any>> = {
  Smartphone,
  Sofa,
  Car,
  Shirt,
  Book,
  Dumbbell,
  Home,
  Baby,
};

export function Sidebar({ isOpen, currentView, onViewChange, onCategoryChange }: SidebarProps) {
  const menuItems = [
    { id: 'home', name: 'Home', icon: Home },
    { id: 'search', name: 'Search', icon: Search },
    { id: 'map', name: 'Map View', icon: MapPin },
    { id: 'messages', name: 'Messages', icon: MessageCircle },
    { id: 'post', name: 'Sell Item', icon: Plus },
    { id: 'profile', name: 'Profile', icon: User },
  ];

  return (
    <>
      {/* Mobile Overlay */}
      {isOpen && (
        <div
          className="fixed inset-0 bg-black bg-opacity-50 z-40 lg:hidden"
          onClick={() => {}}
        />
      )}

      {/* Sidebar */}
      <aside
        className={`fixed left-0 top-16 h-[calc(100vh-4rem)] w-64 bg-white dark:bg-gray-900 border-r border-gray-200 dark:border-gray-700 z-40 transform transition-transform duration-300 ease-in-out ${
          isOpen ? 'translate-x-0' : '-translate-x-full'
        } lg:translate-x-0`}
      >
        <div className="flex flex-col h-full">
          <div className="p-4">
            <nav className="space-y-2">
              {menuItems.map((item) => {
                const Icon = item.icon;
                return (
                  <button
                    key={item.id}
                    onClick={() => onViewChange(item.id)}
                    className={`w-full flex items-center space-x-3 px-3 py-2 rounded-lg text-sm font-medium transition-colors ${
                      currentView === item.id
                        ? 'bg-blue-100 dark:bg-blue-900 text-blue-600 dark:text-blue-400'
                        : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800'
                    }`}
                  >
                    <Icon size={18} />
                    <span>{item.name}</span>
                  </button>
                );
              })}
            </nav>
          </div>

          <div className="border-t border-gray-200 dark:border-gray-700 p-4 flex-1">
            <h3 className="text-sm font-semibold text-gray-900 dark:text-white mb-3">Categories</h3>
            <div className="space-y-1">
              <button
                onClick={() => onCategoryChange('')}
                className="w-full flex items-center justify-between px-3 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-lg transition-colors"
              >
                <span>All Categories</span>
              </button>
              {categories.map((category) => {
                const Icon = iconMap[category.icon] || Grid;
                return (
                  <button
                    key={category.id}
                    onClick={() => onCategoryChange(category.id)}
                    className="w-full flex items-center justify-between px-3 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-lg transition-colors"
                  >
                    <div className="flex items-center space-x-2">
                      <Icon size={16} />
                      <span>{category.name}</span>
                    </div>
                    <span className="text-xs text-gray-500">{category.count}</span>
                  </button>
                );
              })}
            </div>
          </div>
        </div>
      </aside>
    </>
  );
}
